doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title &Dstrok;&abreve;ng k&yacute; Thi&#x1EBF;t b&#x1ECB;
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css' rel='stylesheet')
  script(src='https://unpkg.com/html5-qrcode')
  include ../../partials/header.pug 

script.
  const data = {
   imageUrl: [`./images/tivi1.jpg`,
    "./images/tivi2.jpg",
    "./images/tivi3.jpg"]
  }

//- Truyền biến JavaScript vào Pug bằng cách sử dụng `locals`
- var navUrl = ['user List Device Loan', 'Create Device', 'Loan Device', 'Return Device']

mixin article(items)
  include ../../components/navigation.pug 
    
//- Sử dụng biến JavaScript trong mixin
+article(navUrl)

style.
  section.container {
    margin-top: 50px;
  }
  .form-container {
  max-width: 500px;
  margin: 0 auto;
  }
section.container
  h2.text-center.mb-4 &Dstrok;&abreve;ng k&yacute; Thi&#x1EBF;t b&#x1ECB;
  .form-container
    form#deviceRegistrationForm(action='./create' method='post' enctype='multipart/form-data')
      .mb-3
        label.form-label(for='deviceName') T&ecirc;n thi&#x1EBF;t b&#x1ECB;: (devices.name)
        input#deviceName.form-control(value='Tivi Sam sung' type='text' name='deviceName' required='')
      .mb-3
        label.form-label(for='deviceType') Lo&#x1EA1;i thi&#x1EBF;t b&#x1ECB;: (devices.type)
        input#deviceType.form-control(value='Tivi' type='text' name='deviceType' required='')
      .mb-3
        label.form-label(for='serialNumber') S&#x1ED1; Serial: (devices._id)
        input#serialNumber.form-control(value='TV000001' type='text' name='serialNumber' required='')
      .mb-3
        #qr-reader(style='max-width: 100%;')
        #qr-reader-results
        script.
          var resultContainer = document.getElementById('qr-reader-results');
          var lastResult, countResults = 0;
          function onScanSuccess(decodedText, decodedResult) {
          if (decodedText !== lastResult) {
          ++countResults;
          lastResult = decodedText;
          // Handle on success condition with the decoded message.
          // console.log(`Scan result ${decodedText}`, decodedResult);
          document.getElementById('serialNumber').value = decodedText
          }
          }
          var html5QrcodeScanner = new Html5QrcodeScanner(
          "qr-reader", { fps: 10, qrbox: 250 });
          html5QrcodeScanner.render(onScanSuccess);
      .mb-3
        label.form-label(for='deviceStatus') Tr&#x1EA1;ng th&aacute;i thi&#x1EBF;t b&#x1ECB;: (devices.status)
        select#deviceStatus.form-select(name='deviceStatus' required='')
          option(value='' disabled='' selected='') --Ch&#x1ECD;n--
          option(value='new' selected='') M&#x1EDB;i
          option(value='likeNew') H&agrave;ng &dstrok;&atilde; qua s&#x1EED; d&#x1EE5;ng
      .mb-3
        label.form-label(for='deviceInitStatus') Tr&#x1EA1;ng th&aacute;i: (devices.initStatus)
        select#deviceInitStatus.form-select(name='deviceInitStatus' required='')
          option(value='' disabled='' selected='') --Ch&#x1ECD;n--
          option(value='used') &Dstrok;&atilde; m&#x1B0;&#x1EE3;n
          option(value='notused' selected='') Ch&#x1B0;a m&#x1B0;&#x1EE3;n
      .mb-3
        label.form-label(for='imageSelect') Ch&#x1ECD;n &#x1EA3;nh thi&#x1EBF;t b&#x1ECB;:
        select#imageSelect.form-select(onchange='changeImage(this)')
          option(value='' disabled='' selected='') --Ch&#x1ECD;n &#x1EA3;nh--
      .mb-3
        label.form-label(for='deviceUrlImg') &#x1EA2;nh thi&#x1EBF;t b&#x1ECB;: (devices.imageUrl)
        input#deviceUrlImg.form-control(type='file' accept='image/*' name='deviceUrlFile' onchange='imageRender.src = window.URL.createObjectURL(this.files[0])')
        .warrper.text-center
          img#imageRender(style='max-width: 100%' src='' alt='')
      script.
        // Function to populate the dropdown with options
        function populateDropdown() {
        var dropdown = document.getElementById("imageSelect");
        // Clear existing options
        dropdown.innerHTML = "";
        // Add a default option
        var defaultOption = document.createElement("option");
        defaultOption.text = "--Chọn ảnh--";
        defaultOption.disabled = true;
        defaultOption.selected = true;
        dropdown.add(defaultOption);
        // Add options for each image URL
        data.imageUrl.forEach(function(image, index) {
        var option = document.createElement("option");
        option.value = image;
        option.text = "Ảnh " + (index + 1);
        dropdown.add(option);
        });
        }
        // Call the function to populate the dropdown when the page loads
        window.onload = function() {
        populateDropdown();
        };
        // Function to change the displayed image when a different option is selected
        function changeImage(selectElement) {
        var selectedImage = selectElement.value;
        var imageRender = document.getElementById('imageRender');
        // Set the src of the img tag to display the selected image
        imageRender.src = selectedImage;
        }
      .mb-3
        label.form-label(for='deviceVideo') Video thi&#x1EBF;t b&#x1ECB;: (devices.videoUrl)
        input#deviceVideo.form-control(type='file' name='deviceUrlFile' accept='video/*' onchange='renderVideo(this)')
        video#videoRender(controls='' style='max-width: 100%; display: none;')
          // Nếu trình duyệt không hỗ trợ video, thông báo sẽ hiển thị ở đây
          | Tr&igrave;nh duy&#x1EC7;t c&#x1EE7;a b&#x1EA1;n kh&ocirc;ng h&#x1ED7; tr&#x1EE3; ph&aacute;t video.
      script.
        function renderVideo(input) {
        var videoRender = document.getElementById('videoRender');
        var file = input.files[0];
        var videoURL = URL.createObjectURL(file);
        // Thiết lập src của thẻ video để hiển thị video
        videoRender.src = videoURL;
        // Hiển thị thẻ video
        videoRender.style.display = 'block';
        // Tự động phát video sau khi được tải lên
        videoRender.autoplay = true;
        }
      .mb-3
        label.form-label(for='deviceLocation') V&#x1ECB; tr&iacute;: (devices.location)
        input#deviceLocation.form-control(value='P0E2' type='text' name='deviceLocation' required='')
      .mb-3
        label.form-label(for='deviceSupplier') Nh&agrave; cung c&#x1EA5;p: (devices.supplier)
        input#deviceSupplier.form-control(value='Samsung' type='text' name='deviceSupplier' required='')
      .mb-3
        label.form-label(for='deviceHistory') L&#x1B0;u &yacute; l&#x1ECB;ch s&#x1EED; m&#x1B0;&#x1EE3;n tr&#x1EA3; thi&#x1EBF;t b&#x1ECB;: (devices.history)
        input#deviceHistory.form-control(type='text' name='deviceHistory')
      .mb-3
        label.form-label(for='purchaseDate') Ng&agrave;y mua thi&#x1EBF;t b&#x1ECB;: (device.purchaseDate)
        input#purchaseDate.form-control(type='date' name='purchaseDate' required='')
      .mb-3
        label.form-label(for='warrantyExpiry') Ng&agrave;y h&#x1EBF;t h&#x1EA1;n: (device.warrantyExpiry)
        input#warrantyExpiry.form-control(type='date' name='warrantyExpiry' required='')
      button.btn.btn-primary(type='submit') &Dstrok;&abreve;ng k&yacute;
script(src='https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js')
script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js')
