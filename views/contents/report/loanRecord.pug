doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title Loan Record table
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css' rel='stylesheet')
  include ../../partials/header.pug

//- Truyền biến JavaScript vào Pug bằng cách sử dụng `locals`
- var navUrl = ['Report', 'Create', 'Loan', 'Return']
- var local = 'device'
mixin article({navUrl, local})
  include ../../components/navigation.pug 
    
//- Sử dụng biến JavaScript trong mixin
+article({navUrl, local})
  
  style.
    /* Optional: Thêm CSS tùy chỉnh nếu cần */
.container.mt-4
  h1 Loan Record table
  .mb-3
    input#searchInput.form-control(type='text' placeholder='Search by Username or Device ID')
  table.table.table-striped.mt-4
    thead
      tr
        th Username
        th Device ID
        th Borrowed At
        th Returned At
        th Status
        th Notes
    tbody#dataBody
      // Dữ liệu sẽ được thêm vào đây bằng JavaScript
script.
  const mockData = !{data};
  // Thêm dữ liệu từ mockData vào bảng
  const dataBody = document.getElementById("dataBody");
  mockData.forEach(item => {
  const row = document.createElement("tr");
  row.innerHTML = `
  <td>${item.username}</td>
  <td>${item.deviceID}</td>
  <td>${item.borrowedAt.toLocaleString()}</td>
  <td>${item.returnedAt.toLocaleString()}</td>
  <td>${item.status}</td>
  <td>${item.notes ? `${item.notes}` : ''}</td>
  `;
  dataBody.appendChild(row);
  });

script.
  const searchInput = document.getElementById("searchInput");
  function search() {
  const searchText = searchInput.value.toLowerCase();
  const filteredData = mockData.filter(item => {
  return item.username.toLowerCase().includes(searchText) || item.deviceID.toLowerCase().includes(searchText);
  });
  renderTable(filteredData);
  }
  function renderTable(data) {
  dataBody.innerHTML = "";
  data.forEach(item => {
  const row = document.createElement("tr");
  row.innerHTML = `
  <td>${item.username}</td>
  <td>${item.deviceID}</td>
  <td>${item.borrowedAt.toLocaleString()}</td>
  <td>${item.returnedAt.toLocaleString()}</td>
  <td>${item.status}</td>
  <td>${item.notes}</td>
  `;
  dataBody.appendChild(row);
  });
  }
  searchInput.addEventListener("input", search);
  // Hiển thị bảng với dữ liệu mặc định ban đầu
  renderTable(mockData);
